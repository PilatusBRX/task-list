{"ast":null,"code":"var _jsxFileName = \"/Users/pilatus/Desktop/task-list - hooks/src/components/task/TaskForm.js\";\nimport React, { Fragment, useContext, useState } from 'react';\nimport { TaskContext } from '../../contexts/task/TaskContext';\nimport { AlertContext } from '../../contexts/alert/AlertContext';\n\nconst TaskForm = () => {\n  const {\n    clearList,\n    addTask,\n    tasks\n  } = useContext(TaskContext);\n  const {\n    setAlert\n  } = useContext(AlertContext);\n  const [task, setTask] = useState({\n    title: '',\n    priority: 'média'\n  });\n  const {\n    title,\n    priority\n  } = task;\n  /******* onChange ********/\n\n  const onChange = e => {\n    setTask({ ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n  /******* onSubmit ********/\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (title === '' || priority === '') {\n      setAlert('Você precisa adionar uma tarefa', 'danger');\n    } else {\n      addTask(task);\n      clearItems();\n      setAlert('Tarefa adicionada com sucesso!', 'success');\n    }\n  };\n\n  const clearItems = () => {\n    setTask({\n      title: '',\n      priority: ''\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    value: title,\n    onChange: onChange,\n    placeholder: \"Adicionar uma tarefa...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: onChange,\n    name: \"priority\",\n    value: priority,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Prioridade\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"m\\xE9dia\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"alta\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"baixa\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Add task\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clear-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, tasks.length > 0 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: clearList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Clear List\")))));\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["/Users/pilatus/Desktop/task-list - hooks/src/components/task/TaskForm.js"],"names":["React","Fragment","useContext","useState","TaskContext","AlertContext","TaskForm","clearList","addTask","tasks","setAlert","task","setTask","title","priority","onChange","e","target","name","value","onSubmit","preventDefault","clearItems","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useState } from 'react';\nimport { TaskContext } from '../../contexts/task/TaskContext';\nimport { AlertContext } from '../../contexts/alert/AlertContext';\n\nconst TaskForm = () => {\n  const { clearList, addTask, tasks } = useContext(TaskContext);\n  const { setAlert } = useContext(AlertContext);\n\n  const [task, setTask] = useState({\n    title: '',\n    priority: 'média',\n  });\n  const { title, priority } = task;\n\n  /******* onChange ********/\n  const onChange = (e) => {\n    setTask({ ...task, [e.target.name]: e.target.value });\n  };\n  /******* onSubmit ********/\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (title === '' || priority === '') {\n      setAlert('Você precisa adionar uma tarefa', 'danger');\n    } else {\n      addTask(task);\n      clearItems();\n      setAlert('Tarefa adicionada com sucesso!', 'success');\n    }\n  };\n  const clearItems = () => {\n    setTask({ title: '', priority: '' });\n  };\n  return (\n    <Fragment>\n      <form onSubmit={onSubmit}>\n        <input\n          type='text'\n          name='title'\n          value={title}\n          onChange={onChange}\n          placeholder='Adicionar uma tarefa...'\n        />\n        <select onChange={onChange} name='priority' value={priority} required>\n          <option disabled>Prioridade</option>\n          <option>média</option>\n          <option>alta</option>\n          <option>baixa</option>\n        </select>\n        <div className='add-task'>\n          <button className='btn btn-warning'>Add task</button>\n        </div>\n        <div className='clear-list'>\n          <div>\n            {tasks.length > 0 && (\n              <button className='btn btn-warning' onClick={clearList}>\n                Clear List\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}