{"ast":null,"code":"var _jsxFileName = \"/Users/pilatus/Desktop/task-list - ui-localstorage/src/contexts/task/TaskContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport uuid from 'uuid/v4';\nimport TaskReducer from './TaskReducer';\nexport const TaskContext = createContext();\n\nconst TaskContextProvider = props => {\n  const [tasks, dispatch] = useReducer(TaskReducer, [], () => {\n    const localData = localStorage.getItem('tasks');\n    return localData ? JSON.parse(localData) : [{\n      id: 1,\n      title: 'Limpar a casa',\n      priority: 'média',\n      done: true\n    }, {\n      id: 2,\n      title: 'Encontrar o tom',\n      priority: 'alta',\n      done: false\n    }, {\n      id: 3,\n      title: 'Pagar a luz',\n      priority: 'baixa',\n      done: true\n    }, {\n      id: 4,\n      title: 'fazer o café',\n      priority: 'média',\n      done: false\n    }];\n  });\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  /*********** **** funçoes  ***************/\n\n  /********  Atenção   ******* */\n\n  /*  payload é o valor/dado  */\n  // 1 - addTask\n\n  const addTask = task => {\n    task.id = uuid();\n    dispatch({\n      type: 'ADD_TASK',\n      payload: task\n    });\n  }; // 2 - toggleDone\n\n\n  const toggleDone = task => {\n    dispatch({\n      type: 'TOGGLE_DONE',\n      payload: task\n    });\n  }; // 3 - removeTask\n\n\n  const removeTask = id => {\n    dispatch({\n      type: 'REMOVE_TASK',\n      payload: id\n    });\n  }; // 4 - clearList\n\n\n  const clearList = () => {\n    dispatch({\n      type: 'CLEAR_LIST'\n    });\n  };\n  /*********** **** FUNCTIONS  ***************/\n\n\n  return /*#__PURE__*/React.createElement(TaskContext.Provider, {\n    value: {\n      tasks,\n      toggleDone,\n      removeTask,\n      clearList,\n      addTask\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TaskContextProvider;","map":{"version":3,"sources":["/Users/pilatus/Desktop/task-list - ui-localstorage/src/contexts/task/TaskContext.js"],"names":["React","createContext","useReducer","useEffect","uuid","TaskReducer","TaskContext","TaskContextProvider","props","tasks","dispatch","localData","localStorage","getItem","JSON","parse","id","title","priority","done","setItem","stringify","addTask","task","type","payload","toggleDone","removeTask","clearList","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACG,WAAD,EAAc,EAAd,EAAkB,MAAM;AAC1D,UAAMM,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAlB;AACA,WAAOF,SAAS,GACZG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CADY,GAEZ,CACE;AAAEK,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,eAAhB;AAAiCC,MAAAA,QAAQ,EAAE,OAA3C;AAAoDC,MAAAA,IAAI,EAAE;AAA1D,KADF,EAEE;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,iBAAhB;AAAmCC,MAAAA,QAAQ,EAAE,MAA7C;AAAqDC,MAAAA,IAAI,EAAE;AAA3D,KAFF,EAGE;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,aAAhB;AAA+BC,MAAAA,QAAQ,EAAE,OAAzC;AAAkDC,MAAAA,IAAI,EAAE;AAAxD,KAHF,EAIE;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,cAAhB;AAAgCC,MAAAA,QAAQ,EAAE,OAA1C;AAAmDC,MAAAA,IAAI,EAAE;AAAzD,KAJF,CAFJ;AAQD,GAVmC,CAApC;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeZ,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA;;AAEA;;AACA;AAEA;;AACA,QAAMa,OAAO,GAAIC,IAAD,IAAU;AACxBA,IAAAA,IAAI,CAACP,EAAL,GAAUZ,IAAI,EAAd;AACAM,IAAAA,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAND,CAvBqC,CA+BrC;;;AACA,QAAMG,UAAU,GAAIH,IAAD,IAAU;AAC3Bb,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACD,GAFD,CAhCqC,CAoCrC;;;AACA,QAAMI,UAAU,GAAIX,EAAD,IAAQ;AACzBN,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAET;AAAhC,KAAD,CAAR;AACD,GAFD,CArCqC,CAwCrC;;;AACA,QAAMY,SAAS,GAAG,MAAM;AACtBlB,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;AAIA;;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,KADK;AAELiB,MAAAA,UAFK;AAGLC,MAAAA,UAHK;AAILC,MAAAA,SAJK;AAKLN,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGd,KAAK,CAACqB,QATT,CADF;AAaD,CA5DD;;AA6DA,eAAetB,mBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport uuid from 'uuid/v4';\nimport TaskReducer from './TaskReducer';\nexport const TaskContext = createContext();\n\nconst TaskContextProvider = (props) => {\n  const [tasks, dispatch] = useReducer(TaskReducer, [], () => {\n    const localData = localStorage.getItem('tasks');\n    return localData\n      ? JSON.parse(localData)\n      : [\n          { id: 1, title: 'Limpar a casa', priority: 'média', done: true },\n          { id: 2, title: 'Encontrar o tom', priority: 'alta', done: false },\n          { id: 3, title: 'Pagar a luz', priority: 'baixa', done: true },\n          { id: 4, title: 'fazer o café', priority: 'média', done: false },\n        ];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  /*********** **** funçoes  ***************/\n\n  /********  Atenção   ******* */\n  /*  payload é o valor/dado  */\n\n  // 1 - addTask\n  const addTask = (task) => {\n    task.id = uuid();\n    dispatch({\n      type: 'ADD_TASK',\n      payload: task,\n    });\n  };\n\n  // 2 - toggleDone\n  const toggleDone = (task) => {\n    dispatch({ type: 'TOGGLE_DONE', payload: task });\n  };\n\n  // 3 - removeTask\n  const removeTask = (id) => {\n    dispatch({ type: 'REMOVE_TASK', payload: id });\n  };\n  // 4 - clearList\n  const clearList = () => {\n    dispatch({ type: 'CLEAR_LIST' });\n  };\n\n  /*********** **** FUNCTIONS  ***************/\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks,\n        toggleDone,\n        removeTask,\n        clearList,\n        addTask,\n      }}\n    >\n      {props.children}\n    </TaskContext.Provider>\n  );\n};\nexport default TaskContextProvider;\n"]},"metadata":{},"sourceType":"module"}