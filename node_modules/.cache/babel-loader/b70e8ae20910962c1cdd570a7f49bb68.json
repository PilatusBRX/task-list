{"ast":null,"code":"var _jsxFileName = \"/Users/pilatus/Desktop/task-list - ui-localstorage/src/contexts/task/TaskContext.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport uuid from 'uuid/v4';\nimport TaskReducer from './TaskReducer';\nexport const TaskContext = createContext();\n\nconst TaskContextProvider = props => {\n  const initialState = {\n    tasks: window.localStorage.getItem('tasks') == null ? [''] : window.localStorage.getItem('tasks')\n  };\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\n  useEffect(() => {\n    window.localStorage.setItem('tasks', state.tasks);\n  }, [state.tasks]);\n  /*********** **** funçoes  ***************/\n\n  /********  Atenção   ******* */\n\n  /*  payload é o valor/dado  */\n  // 1 - addTask\n\n  const addTask = task => {\n    task.id = uuid();\n    dispatch({\n      type: 'ADD_TASK',\n      payload: task\n    });\n  }; // 2 - toggleDone\n\n\n  const toggleDone = task => {\n    dispatch({\n      type: 'TOGGLE_DONE',\n      payload: task\n    });\n  }; // 3 - removeTask\n\n\n  const removeTask = id => {\n    dispatch({\n      type: 'REMOVE_TASK',\n      payload: id\n    });\n  }; // 4 - clearList\n\n\n  const clearList = () => {\n    dispatch({\n      type: 'CLEAR_LIST'\n    });\n  };\n  /*********** **** FUNCTIONS  ***************/\n\n\n  return /*#__PURE__*/React.createElement(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      toggleDone,\n      removeTask,\n      clearList,\n      addTask\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default TaskContextProvider;","map":{"version":3,"sources":["/Users/pilatus/Desktop/task-list - ui-localstorage/src/contexts/task/TaskContext.js"],"names":["React","createContext","useReducer","useEffect","uuid","TaskReducer","TaskContext","TaskContextProvider","props","initialState","tasks","window","localStorage","getItem","state","dispatch","setItem","addTask","task","id","type","payload","toggleDone","removeTask","clearList","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;;AAEP,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;AACrC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EACHC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,IAAxC,GACI,CAAC,EAAD,CADJ,GAEIF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B;AAJa,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACG,WAAD,EAAcI,YAAd,CAApC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,EAAqCF,KAAK,CAACJ,KAA3C;AACD,GAFQ,EAEN,CAACI,KAAK,CAACJ,KAAP,CAFM,CAAT;AAIA;;AAEA;;AACA;AAEA;;AACA,QAAMO,OAAO,GAAIC,IAAD,IAAU;AACxBA,IAAAA,IAAI,CAACC,EAAL,GAAUf,IAAI,EAAd;AACAW,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GAND,CAnBqC,CA2BrC;;;AACA,QAAMI,UAAU,GAAIJ,IAAD,IAAU;AAC3BH,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEH;AAAhC,KAAD,CAAR;AACD,GAFD,CA5BqC,CAgCrC;;;AACA,QAAMK,UAAU,GAAIJ,EAAD,IAAQ;AACzBJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAAR;AACD,GAFD,CAjCqC,CAoCrC;;;AACA,QAAMK,SAAS,GAAG,MAAM;AACtBT,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;AAIA;;;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELY,MAAAA,UAFK;AAGLC,MAAAA,UAHK;AAILC,MAAAA,SAJK;AAKLP,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGT,KAAK,CAACiB,QATT,CADF;AAaD,CAxDD;;AAyDA,eAAelB,mBAAf","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport uuid from 'uuid/v4';\nimport TaskReducer from './TaskReducer';\nexport const TaskContext = createContext();\n\nconst TaskContextProvider = (props) => {\n  const initialState = {\n    tasks:\n      window.localStorage.getItem('tasks') == null\n        ? ['']\n        : window.localStorage.getItem('tasks'),\n  };\n\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\n  useEffect(() => {\n    window.localStorage.setItem('tasks', state.tasks);\n  }, [state.tasks]);\n\n  /*********** **** funçoes  ***************/\n\n  /********  Atenção   ******* */\n  /*  payload é o valor/dado  */\n\n  // 1 - addTask\n  const addTask = (task) => {\n    task.id = uuid();\n    dispatch({\n      type: 'ADD_TASK',\n      payload: task,\n    });\n  };\n\n  // 2 - toggleDone\n  const toggleDone = (task) => {\n    dispatch({ type: 'TOGGLE_DONE', payload: task });\n  };\n\n  // 3 - removeTask\n  const removeTask = (id) => {\n    dispatch({ type: 'REMOVE_TASK', payload: id });\n  };\n  // 4 - clearList\n  const clearList = () => {\n    dispatch({ type: 'CLEAR_LIST' });\n  };\n\n  /*********** **** FUNCTIONS  ***************/\n\n  return (\n    <TaskContext.Provider\n      value={{\n        tasks: state.tasks,\n        toggleDone,\n        removeTask,\n        clearList,\n        addTask,\n      }}\n    >\n      {props.children}\n    </TaskContext.Provider>\n  );\n};\nexport default TaskContextProvider;\n"]},"metadata":{},"sourceType":"module"}