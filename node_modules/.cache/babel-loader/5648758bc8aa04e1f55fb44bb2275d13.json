{"ast":null,"code":"const TaskReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return { ...state,\n        ...state.tasks\n      };\n\n    case 'REMOVE_TASK':\n      return { ...state,\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    //toggle done\n\n    case 'TOGGLE_DONE':\n      return { ...state,\n        tasks: state.tasks.map(task => task.id === action.payload ? { ...task,\n          done: !task.done\n        } : task)\n      };\n\n    case 'CLEAR_LIST':\n      return { ...state,\n        tasks: action.payload = []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default TaskReducer;","map":{"version":3,"sources":["/Users/pilatus/Desktop/task-list - ui-localstorage/src/contexts/task/TaskReducer.js"],"names":["TaskReducer","state","action","type","tasks","filter","task","id","payload","map","done"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAEL,WAAGA,KAAK,CAACG;AAFJ,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAhD;AAFF,OAAP;AAKF;;AACA,SAAK,aAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYK,GAAZ,CAAiBH,IAAD,IACrBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACM,OAAnB,GAA6B,EAAE,GAAGF,IAAL;AAAWI,UAAAA,IAAI,EAAE,CAACJ,IAAI,CAACI;AAAvB,SAA7B,GAA6DJ,IADxD;AAFF,OAAP;;AAOF,SAAK,YAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELG,QAAAA,KAAK,EAAGF,MAAM,CAACM,OAAP,GAAiB;AAFpB,OAAP;;AAKF;AACE,aAAOP,KAAP;AA7BJ;AA+BD,CAhCD;;AAiCA,eAAeD,WAAf","sourcesContent":["const TaskReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        ...state,\n        ...state.tasks,\n      };\n\n    case 'REMOVE_TASK':\n      return {\n        ...state,\n        tasks: state.tasks.filter((task) => task.id !== action.payload),\n      };\n\n    //toggle done\n    case 'TOGGLE_DONE':\n      return {\n        ...state,\n        tasks: state.tasks.map((task) =>\n          task.id === action.payload ? { ...task, done: !task.done } : task\n        ),\n      };\n\n    case 'CLEAR_LIST':\n      return {\n        ...state,\n        tasks: (action.payload = []),\n      };\n\n    default:\n      return state;\n  }\n};\nexport default TaskReducer;\n"]},"metadata":{},"sourceType":"module"}